{
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Hyperparameter Tuning using HyperDrive\n",
        "\n",
        "TODO: Import Dependencies. In the cell below, import all the dependencies that you will need to complete the project."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "import azureml.core\r\n",
        "from azureml.core.experiment import Experiment\r\n",
        "from azureml.core.workspace import Workspace\r\n",
        "from azureml.core.dataset import Dataset\r\n",
        "from azureml.data.dataset_factory import TabularDatasetFactory\r\n",
        "from azureml.core.compute import AmlCompute\r\n",
        "from azureml.core.compute import ComputeTarget\r\n",
        "from azureml.core.compute_target import ComputeTargetException\r\n",
        "from azureml.core.model import Model\r\n",
        "from azureml.core import Environment, ScriptRunConfig\r\n",
        "from azureml.widgets import RunDetails\r\n",
        "from azureml.train.hyperdrive.run import PrimaryMetricGoal\r\n",
        "from azureml.train.hyperdrive.policy import BanditPolicy, MedianStoppingPolicy\r\n",
        "from azureml.train.hyperdrive.sampling import RandomParameterSampling\r\n",
        "from azureml.train.hyperdrive.runconfig import HyperDriveConfig\r\n",
        "from azureml.train.hyperdrive.parameter_expressions import uniform, choice\r\n",
        "from azureml.core import ScriptRunConfig\r\n",
        "import numpy as np\r\n",
        "import pandas as pd\r\n",
        "from sklearn.model_selection import train_test_split\r\n",
        "import os\r\n",
        "import shutil\r\n"
      ],
      "outputs": [],
      "execution_count": 1,
      "metadata": {
        "gather": {
          "logged": 1624433420431
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Dataset\n",
        "\n",
        "TODO: Get data. In the cell below, write code to access the data you will be using in this project. Remember that the dataset needs to be external."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "experiment_name = 'CapstoneProject-hyperd'\r\n",
        "project_folder = './capstone-project-hyperd'\r\n",
        "\r\n",
        "ws = Workspace.from_config()\r\n",
        "experiment=Experiment(ws, experiment_name)"
      ],
      "outputs": [],
      "execution_count": 2,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1624433422795
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "found = False\r\n",
        "key = \"HeartFailureRate\"\r\n",
        "description_text = \"Dataset for heart failure recommendation\"\r\n",
        "\r\n",
        "if key in ws.datasets.keys(): \r\n",
        "        found = True\r\n",
        "        dataset = ws.datasets[key] \r\n",
        "\r\n",
        "df = dataset.to_pandas_dataframe()\r\n",
        "df.describe()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 3,
          "data": {
            "text/plain": "              age     anaemia  creatinine_phosphokinase    diabetes  \\\ncount  299.000000  299.000000                299.000000  299.000000   \nmean    60.833893    0.431438                581.839465    0.418060   \nstd     11.894809    0.496107                970.287881    0.494067   \nmin     40.000000    0.000000                 23.000000    0.000000   \n25%     51.000000    0.000000                116.500000    0.000000   \n50%     60.000000    0.000000                250.000000    0.000000   \n75%     70.000000    1.000000                582.000000    1.000000   \nmax     95.000000    1.000000               7861.000000    1.000000   \n\n       ejection_fraction  high_blood_pressure      platelets  \\\ncount         299.000000           299.000000     299.000000   \nmean           38.083612             0.351171  263358.029264   \nstd            11.834841             0.478136   97804.236869   \nmin            14.000000             0.000000   25100.000000   \n25%            30.000000             0.000000  212500.000000   \n50%            38.000000             0.000000  262000.000000   \n75%            45.000000             1.000000  303500.000000   \nmax            80.000000             1.000000  850000.000000   \n\n       serum_creatinine  serum_sodium         sex    smoking        time  \\\ncount         299.00000    299.000000  299.000000  299.00000  299.000000   \nmean            1.39388    136.625418    0.648829    0.32107  130.260870   \nstd             1.03451      4.412477    0.478136    0.46767   77.614208   \nmin             0.50000    113.000000    0.000000    0.00000    4.000000   \n25%             0.90000    134.000000    0.000000    0.00000   73.000000   \n50%             1.10000    137.000000    1.000000    0.00000  115.000000   \n75%             1.40000    140.000000    1.000000    1.00000  203.000000   \nmax             9.40000    148.000000    1.000000    1.00000  285.000000   \n\n       DEATH_EVENT  \ncount    299.00000  \nmean       0.32107  \nstd        0.46767  \nmin        0.00000  \n25%        0.00000  \n50%        0.00000  \n75%        1.00000  \nmax        1.00000  ",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>anaemia</th>\n      <th>creatinine_phosphokinase</th>\n      <th>diabetes</th>\n      <th>ejection_fraction</th>\n      <th>high_blood_pressure</th>\n      <th>platelets</th>\n      <th>serum_creatinine</th>\n      <th>serum_sodium</th>\n      <th>sex</th>\n      <th>smoking</th>\n      <th>time</th>\n      <th>DEATH_EVENT</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>299.000000</td>\n      <td>299.000000</td>\n      <td>299.000000</td>\n      <td>299.000000</td>\n      <td>299.000000</td>\n      <td>299.000000</td>\n      <td>299.000000</td>\n      <td>299.00000</td>\n      <td>299.000000</td>\n      <td>299.000000</td>\n      <td>299.00000</td>\n      <td>299.000000</td>\n      <td>299.00000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>60.833893</td>\n      <td>0.431438</td>\n      <td>581.839465</td>\n      <td>0.418060</td>\n      <td>38.083612</td>\n      <td>0.351171</td>\n      <td>263358.029264</td>\n      <td>1.39388</td>\n      <td>136.625418</td>\n      <td>0.648829</td>\n      <td>0.32107</td>\n      <td>130.260870</td>\n      <td>0.32107</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>11.894809</td>\n      <td>0.496107</td>\n      <td>970.287881</td>\n      <td>0.494067</td>\n      <td>11.834841</td>\n      <td>0.478136</td>\n      <td>97804.236869</td>\n      <td>1.03451</td>\n      <td>4.412477</td>\n      <td>0.478136</td>\n      <td>0.46767</td>\n      <td>77.614208</td>\n      <td>0.46767</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>40.000000</td>\n      <td>0.000000</td>\n      <td>23.000000</td>\n      <td>0.000000</td>\n      <td>14.000000</td>\n      <td>0.000000</td>\n      <td>25100.000000</td>\n      <td>0.50000</td>\n      <td>113.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>4.000000</td>\n      <td>0.00000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>51.000000</td>\n      <td>0.000000</td>\n      <td>116.500000</td>\n      <td>0.000000</td>\n      <td>30.000000</td>\n      <td>0.000000</td>\n      <td>212500.000000</td>\n      <td>0.90000</td>\n      <td>134.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>73.000000</td>\n      <td>0.00000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>60.000000</td>\n      <td>0.000000</td>\n      <td>250.000000</td>\n      <td>0.000000</td>\n      <td>38.000000</td>\n      <td>0.000000</td>\n      <td>262000.000000</td>\n      <td>1.10000</td>\n      <td>137.000000</td>\n      <td>1.000000</td>\n      <td>0.00000</td>\n      <td>115.000000</td>\n      <td>0.00000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>70.000000</td>\n      <td>1.000000</td>\n      <td>582.000000</td>\n      <td>1.000000</td>\n      <td>45.000000</td>\n      <td>1.000000</td>\n      <td>303500.000000</td>\n      <td>1.40000</td>\n      <td>140.000000</td>\n      <td>1.000000</td>\n      <td>1.00000</td>\n      <td>203.000000</td>\n      <td>1.00000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>95.000000</td>\n      <td>1.000000</td>\n      <td>7861.000000</td>\n      <td>1.000000</td>\n      <td>80.000000</td>\n      <td>1.000000</td>\n      <td>850000.000000</td>\n      <td>9.40000</td>\n      <td>148.000000</td>\n      <td>1.000000</td>\n      <td>1.00000</td>\n      <td>285.000000</td>\n      <td>1.00000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 3,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1624433427634
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Cluster\n",
        "\n",
        "# Setting up the compute cluster\n",
        "\n",
        "from azureml.core.compute import AmlCompute\n",
        "from azureml.core.compute import ComputeTarget\n",
        "from azureml.core.compute_target import ComputeTargetException\n",
        "\n",
        "# NOTE: update the cluster name to match the existing cluster\n",
        "# Choose a name for your CPU cluster\n",
        "amlcompute_cluster_name = \"CapstoneHD\"\n",
        "\n",
        "# Verify that cluster does not exist already\n",
        "try:\n",
        "    compute_target = ComputeTarget(workspace=ws, name=amlcompute_cluster_name)\n",
        "    print('Found existing cluster, use it.')\n",
        "except ComputeTargetException:\n",
        "    compute_config = AmlCompute.provisioning_configuration(vm_size='STANDARD_DS3_V2',\n",
        "                                                           min_nodes=1, # for GPU, use \"STANDARD_NC6\"\n",
        "                                                           #vm_priority = 'lowpriority', # optional\n",
        "                                                           max_nodes=6)\n",
        "    compute_target = ComputeTarget.create(ws, amlcompute_cluster_name, compute_config)\n",
        "\n",
        "compute_target.wait_for_completion(show_output=True, min_node_count = 1, timeout_in_minutes = 10)\n",
        "# For a more detailed view of current AmlCompute status, use get_status()."
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Creating........\n",
            "SucceededProvisioning operation finished, operation \"Succeeded\"\n",
            "Succeeded..................\n",
            "AmlCompute wait for completion finished\n",
            "\n",
            "Minimum number of nodes requested have been provisioned\n"
          ]
        }
      ],
      "execution_count": 4,
      "metadata": {
        "gather": {
          "logged": 1624433572808
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Hyperdrive Configuration\n",
        "\n",
        "TODO: Explain the model you are using and the reason for chosing the different hyperparameters, termination policy and config settings."
      ],
      "metadata": {
        "collapsed": true,
        "gather": {
          "logged": 1598531923519
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# TODO: Create an early termination policy. This is not required if you are using Bayesian sampling.\n",
        "early_termination_policy = BanditPolicy(evaluation_interval=2,slack_factor=0.2)\n",
        "\n",
        "#TODO: Create the different params that you will be using during training\n",
        "param_sampling = RandomParameterSampling({'C': choice(0.01, 0.1, 1, 10, 100),\n",
        "                                        'max_iter' : choice(50,75,100,125,150,175,200),\n",
        "                                        'solver' : choice('liblinear','sag','lbfgs', 'saga')})\n",
        "\n",
        "#TODO: Create your estimator and hyperdrive config\n",
        "if \"training\" not in os.listdir():\n",
        "    os.mkdir(\"./training\")\n",
        "\n",
        "# Create a SKLearn estimator for use with train.py\n",
        "\n",
        "estimator = ScriptRunConfig(source_directory='./training', compute_target = compute_target,script= 'train.py')\n",
        "\n",
        "hyperdrive_run_config = HyperDriveConfig(run_config=estimator, \n",
        "                                    hyperparameter_sampling=param_sampling,policy=early_termination_policy,max_total_runs=50,\n",
        "                                    max_duration_minutes=30,\n",
        "                                    primary_metric_name='Accuracy',\n",
        "                                    max_concurrent_runs=5,\n",
        "                                    primary_metric_goal=PrimaryMetricGoal.MAXIMIZE)"
      ],
      "outputs": [],
      "execution_count": 8,
      "metadata": {
        "gather": {
          "logged": 1624433745063
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#TODO: Submit your experiment\r\n",
        "\r\n",
        "hyperdriverun = experiment.submit(hyperdrive_run_config)"
      ],
      "outputs": [],
      "execution_count": 9,
      "metadata": {
        "gather": {
          "logged": 1624433753532
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Run Details\n",
        "\n",
        "OPTIONAL: Write about the different models trained and their performance. Why do you think some models did better than others?\n",
        "\n",
        "TODO: In the cell below, use the `RunDetails` widget to show the different experiments."
      ],
      "metadata": {
        "collapsed": true,
        "gather": {
          "logged": 1598544898497
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\r\n",
        "from azureml.widgets import RunDetails\r\n",
        "\r\n",
        "RunDetails(hyperdriverun).show()\r\n",
        "hyperdriverun.wait_for_completion()"
      ],
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "_HyperDriveWidget(widget_settings={'childWidgetDisplay': 'popup', 'send_telemetry': False, 'log_level': 'INFO'…",
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "fd1531cc691d4f8eaccdeea52c26d9d1"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "application/aml.mini.widget.v1": "{\"status\": \"Running\", \"workbench_run_details_uri\": \"https://ml.azure.com/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34?wsid=/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourcegroups/aml-quickstarts-147759/workspaces/quick-starts-ws-147759&tid=660b3398-b80e-49d2-bc5b-ac1dc93b5254\", \"run_id\": \"HD_e987b7c9-31f1-410a-9d98-028553c0cb34\", \"run_properties\": {\"run_id\": \"HD_e987b7c9-31f1-410a-9d98-028553c0cb34\", \"created_utc\": \"2021-06-23T07:35:52.601247Z\", \"properties\": {\"primary_metric_config\": \"{\\\"name\\\": \\\"Accuracy\\\", \\\"goal\\\": \\\"maximize\\\"}\", \"resume_from\": \"null\", \"runTemplate\": \"HyperDrive\", \"azureml.runsource\": \"hyperdrive\", \"platform\": \"AML\", \"ContentSnapshotId\": \"8814a27f-eaab-4f23-9fb0-052a916ce7d3\"}, \"tags\": {\"_aml_system_max_concurrent_jobs\": \"5\", \"max_concurrent_jobs\": \"5\", \"_aml_system_max_total_jobs\": \"50\", \"max_total_jobs\": \"50\", \"_aml_system_max_duration_minutes\": \"30\", \"max_duration_minutes\": \"30\", \"_aml_system_policy_config\": \"{\\\"name\\\": \\\"BANDIT\\\", \\\"properties\\\": {\\\"evaluation_interval\\\": 2, \\\"delay_evaluation\\\": 0, \\\"slack_factor\\\": 0.2}}\", \"policy_config\": \"{\\\"name\\\": \\\"BANDIT\\\", \\\"properties\\\": {\\\"evaluation_interval\\\": 2, \\\"delay_evaluation\\\": 0, \\\"slack_factor\\\": 0.2}}\", \"_aml_system_generator_config\": \"{\\\"name\\\": \\\"RANDOM\\\", \\\"parameter_space\\\": {\\\"C\\\": [\\\"choice\\\", [[0.01, 0.1, 1, 10, 100]]], \\\"max_iter\\\": [\\\"choice\\\", [[50, 75, 100, 125, 150, 175, 200]]], \\\"solver\\\": [\\\"choice\\\", [[\\\"liblinear\\\", \\\"sag\\\", \\\"lbfgs\\\", \\\"saga\\\"]]]}}\", \"generator_config\": \"{\\\"name\\\": \\\"RANDOM\\\", \\\"parameter_space\\\": {\\\"C\\\": [\\\"choice\\\", [[0.01, 0.1, 1, 10, 100]]], \\\"max_iter\\\": [\\\"choice\\\", [[50, 75, 100, 125, 150, 175, 200]]], \\\"solver\\\": [\\\"choice\\\", [[\\\"liblinear\\\", \\\"sag\\\", \\\"lbfgs\\\", \\\"saga\\\"]]]}}\", \"_aml_system_primary_metric_config\": \"{\\\"name\\\": \\\"Accuracy\\\", \\\"goal\\\": \\\"maximize\\\"}\", \"primary_metric_config\": \"{\\\"name\\\": \\\"Accuracy\\\", \\\"goal\\\": \\\"maximize\\\"}\", \"_aml_system_platform_config\": \"{\\\"ServiceAddress\\\": \\\"https://southcentralus.experiments.azureml.net\\\", \\\"ServiceArmScope\\\": \\\"subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/CapstoneProject-hyperd\\\", \\\"SubscriptionId\\\": \\\"f9d5a085-54dc-4215-9ba6-dad5d86e60a0\\\", \\\"ResourceGroupName\\\": \\\"aml-quickstarts-147759\\\", \\\"WorkspaceName\\\": \\\"quick-starts-ws-147759\\\", \\\"ExperimentName\\\": \\\"CapstoneProject-hyperd\\\", \\\"Definition\\\": {\\\"Overrides\\\": {\\\"script\\\": \\\"train.py\\\", \\\"arguments\\\": [], \\\"target\\\": \\\"CapstoneHD\\\", \\\"framework\\\": \\\"Python\\\", \\\"communicator\\\": \\\"None\\\", \\\"maxRunDurationSeconds\\\": 2592000, \\\"nodeCount\\\": 1, \\\"priority\\\": null, \\\"environment\\\": {\\\"name\\\": null, \\\"version\\\": null, \\\"environmentVariables\\\": {\\\"EXAMPLE_ENV_VAR\\\": \\\"EXAMPLE_VALUE\\\"}, \\\"python\\\": {\\\"userManagedDependencies\\\": false, \\\"interpreterPath\\\": \\\"python\\\", \\\"condaDependenciesFile\\\": null, \\\"baseCondaEnvironment\\\": null, \\\"condaDependencies\\\": {\\\"name\\\": \\\"project_environment\\\", \\\"dependencies\\\": [\\\"python=3.6.2\\\", {\\\"pip\\\": [\\\"azureml-defaults\\\"]}], \\\"channels\\\": [\\\"anaconda\\\", \\\"conda-forge\\\"]}}, \\\"docker\\\": {\\\"enabled\\\": false, \\\"baseImage\\\": \\\"mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210513.v1\\\", \\\"baseDockerfile\\\": null, \\\"sharedVolumes\\\": true, \\\"shmSize\\\": \\\"2g\\\", \\\"arguments\\\": [], \\\"baseImageRegistry\\\": {\\\"address\\\": null, \\\"username\\\": null, \\\"password\\\": null, \\\"registryIdentity\\\": null}, \\\"platform\\\": {\\\"os\\\": \\\"Linux\\\", \\\"architecture\\\": \\\"amd64\\\"}}, \\\"spark\\\": {\\\"repositories\\\": [], \\\"packages\\\": [], \\\"precachePackages\\\": true}, \\\"databricks\\\": {\\\"mavenLibraries\\\": [], \\\"pypiLibraries\\\": [], \\\"rcranLibraries\\\": [], \\\"jarLibraries\\\": [], \\\"eggLibraries\\\": []}, \\\"r\\\": null, \\\"inferencingStackVersion\\\": null}, \\\"history\\\": {\\\"outputCollection\\\": true, \\\"snapshotProject\\\": true, \\\"directoriesToWatch\\\": [\\\"logs\\\"]}, \\\"spark\\\": {\\\"configuration\\\": {\\\"spark.app.name\\\": \\\"Azure ML Experiment\\\", \\\"spark.yarn.maxAppAttempts\\\": 1}}, \\\"docker\\\": {\\\"useDocker\\\": false, \\\"sharedVolumes\\\": true, \\\"arguments\\\": [], \\\"shmSize\\\": \\\"2g\\\"}, \\\"hdi\\\": {\\\"yarnDeployMode\\\": \\\"cluster\\\"}, \\\"tensorflow\\\": {\\\"workerCount\\\": 1, \\\"parameterServerCount\\\": 1}, \\\"mpi\\\": {\\\"processCountPerNode\\\": 1, \\\"nodeCount\\\": 1}, \\\"pytorch\\\": {\\\"communicationBackend\\\": \\\"nccl\\\", \\\"processCount\\\": null, \\\"nodeCount\\\": 1}, \\\"paralleltask\\\": {\\\"maxRetriesPerWorker\\\": 0, \\\"workerCountPerNode\\\": 1, \\\"terminalExitCodes\\\": null}, \\\"dataReferences\\\": {}, \\\"data\\\": {}, \\\"outputData\\\": {}, \\\"sourceDirectoryDataStore\\\": null, \\\"amlcompute\\\": {\\\"vmSize\\\": null, \\\"vmPriority\\\": null, \\\"retainCluster\\\": false, \\\"name\\\": null, \\\"clusterMaxNodeCount\\\": null}, \\\"credentialPassthrough\\\": false, \\\"command\\\": \\\"\\\"}, \\\"TargetDetails\\\": null, \\\"SnapshotId\\\": \\\"8814a27f-eaab-4f23-9fb0-052a916ce7d3\\\", \\\"TelemetryValues\\\": {\\\"amlClientType\\\": \\\"azureml-sdk-train\\\", \\\"amlClientModule\\\": \\\"[Scrubbed]\\\", \\\"amlClientFunction\\\": \\\"[Scrubbed]\\\", \\\"tenantId\\\": \\\"660b3398-b80e-49d2-bc5b-ac1dc93b5254\\\", \\\"amlClientRequestId\\\": \\\"a5551465-83b6-437c-97f4-05fd26f3e647\\\", \\\"amlClientSessionId\\\": \\\"a8cfd089-70b2-47af-98c1-12e54bd37983\\\", \\\"subscriptionId\\\": \\\"f9d5a085-54dc-4215-9ba6-dad5d86e60a0\\\", \\\"estimator\\\": \\\"NoneType\\\", \\\"samplingMethod\\\": \\\"RANDOM\\\", \\\"terminationPolicy\\\": \\\"Bandit\\\", \\\"primaryMetricGoal\\\": \\\"maximize\\\", \\\"maxTotalRuns\\\": 50, \\\"maxConcurrentRuns\\\": 5, \\\"maxDurationMinutes\\\": 30, \\\"vmSize\\\": null}}}\", \"platform_config\": \"{\\\"ServiceAddress\\\": \\\"https://southcentralus.experiments.azureml.net\\\", \\\"ServiceArmScope\\\": \\\"subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/CapstoneProject-hyperd\\\", \\\"SubscriptionId\\\": \\\"f9d5a085-54dc-4215-9ba6-dad5d86e60a0\\\", \\\"ResourceGroupName\\\": \\\"aml-quickstarts-147759\\\", \\\"WorkspaceName\\\": \\\"quick-starts-ws-147759\\\", \\\"ExperimentName\\\": \\\"CapstoneProject-hyperd\\\", \\\"Definition\\\": {\\\"Overrides\\\": {\\\"script\\\": \\\"train.py\\\", \\\"arguments\\\": [], \\\"target\\\": \\\"CapstoneHD\\\", \\\"framework\\\": \\\"Python\\\", \\\"communicator\\\": \\\"None\\\", \\\"maxRunDurationSeconds\\\": 2592000, \\\"nodeCount\\\": 1, \\\"priority\\\": null, \\\"environment\\\": {\\\"name\\\": null, \\\"version\\\": null, \\\"environmentVariables\\\": {\\\"EXAMPLE_ENV_VAR\\\": \\\"EXAMPLE_VALUE\\\"}, \\\"python\\\": {\\\"userManagedDependencies\\\": false, \\\"interpreterPath\\\": \\\"python\\\", \\\"condaDependenciesFile\\\": null, \\\"baseCondaEnvironment\\\": null, \\\"condaDependencies\\\": {\\\"name\\\": \\\"project_environment\\\", \\\"dependencies\\\": [\\\"python=3.6.2\\\", {\\\"pip\\\": [\\\"azureml-defaults\\\"]}], \\\"channels\\\": [\\\"anaconda\\\", \\\"conda-forge\\\"]}}, \\\"docker\\\": {\\\"enabled\\\": false, \\\"baseImage\\\": \\\"mcr.microsoft.com/azureml/openmpi3.1.2-ubuntu18.04:20210513.v1\\\", \\\"baseDockerfile\\\": null, \\\"sharedVolumes\\\": true, \\\"shmSize\\\": \\\"2g\\\", \\\"arguments\\\": [], \\\"baseImageRegistry\\\": {\\\"address\\\": null, \\\"username\\\": null, \\\"password\\\": null, \\\"registryIdentity\\\": null}, \\\"platform\\\": {\\\"os\\\": \\\"Linux\\\", \\\"architecture\\\": \\\"amd64\\\"}}, \\\"spark\\\": {\\\"repositories\\\": [], \\\"packages\\\": [], \\\"precachePackages\\\": true}, \\\"databricks\\\": {\\\"mavenLibraries\\\": [], \\\"pypiLibraries\\\": [], \\\"rcranLibraries\\\": [], \\\"jarLibraries\\\": [], \\\"eggLibraries\\\": []}, \\\"r\\\": null, \\\"inferencingStackVersion\\\": null}, \\\"history\\\": {\\\"outputCollection\\\": true, \\\"snapshotProject\\\": true, \\\"directoriesToWatch\\\": [\\\"logs\\\"]}, \\\"spark\\\": {\\\"configuration\\\": {\\\"spark.app.name\\\": \\\"Azure ML Experiment\\\", \\\"spark.yarn.maxAppAttempts\\\": 1}}, \\\"docker\\\": {\\\"useDocker\\\": false, \\\"sharedVolumes\\\": true, \\\"arguments\\\": [], \\\"shmSize\\\": \\\"2g\\\"}, \\\"hdi\\\": {\\\"yarnDeployMode\\\": \\\"cluster\\\"}, \\\"tensorflow\\\": {\\\"workerCount\\\": 1, \\\"parameterServerCount\\\": 1}, \\\"mpi\\\": {\\\"processCountPerNode\\\": 1, \\\"nodeCount\\\": 1}, \\\"pytorch\\\": {\\\"communicationBackend\\\": \\\"nccl\\\", \\\"processCount\\\": null, \\\"nodeCount\\\": 1}, \\\"paralleltask\\\": {\\\"maxRetriesPerWorker\\\": 0, \\\"workerCountPerNode\\\": 1, \\\"terminalExitCodes\\\": null}, \\\"dataReferences\\\": {}, \\\"data\\\": {}, \\\"outputData\\\": {}, \\\"sourceDirectoryDataStore\\\": null, \\\"amlcompute\\\": {\\\"vmSize\\\": null, \\\"vmPriority\\\": null, \\\"retainCluster\\\": false, \\\"name\\\": null, \\\"clusterMaxNodeCount\\\": null}, \\\"credentialPassthrough\\\": false, \\\"command\\\": \\\"\\\"}, \\\"TargetDetails\\\": null, \\\"SnapshotId\\\": \\\"8814a27f-eaab-4f23-9fb0-052a916ce7d3\\\", \\\"TelemetryValues\\\": {\\\"amlClientType\\\": \\\"azureml-sdk-train\\\", \\\"amlClientModule\\\": \\\"[Scrubbed]\\\", \\\"amlClientFunction\\\": \\\"[Scrubbed]\\\", \\\"tenantId\\\": \\\"660b3398-b80e-49d2-bc5b-ac1dc93b5254\\\", \\\"amlClientRequestId\\\": \\\"a5551465-83b6-437c-97f4-05fd26f3e647\\\", \\\"amlClientSessionId\\\": \\\"a8cfd089-70b2-47af-98c1-12e54bd37983\\\", \\\"subscriptionId\\\": \\\"f9d5a085-54dc-4215-9ba6-dad5d86e60a0\\\", \\\"estimator\\\": \\\"NoneType\\\", \\\"samplingMethod\\\": \\\"RANDOM\\\", \\\"terminationPolicy\\\": \\\"Bandit\\\", \\\"primaryMetricGoal\\\": \\\"maximize\\\", \\\"maxTotalRuns\\\": 50, \\\"maxConcurrentRuns\\\": 5, \\\"maxDurationMinutes\\\": 30, \\\"vmSize\\\": null}}}\", \"_aml_system_resume_child_runs\": \"null\", \"resume_child_runs\": \"null\", \"_aml_system_all_jobs_generated\": \"false\", \"all_jobs_generated\": \"false\", \"_aml_system_cancellation_requested\": \"false\", \"cancellation_requested\": \"false\", \"_aml_system_progress_metadata_evaluation_timestamp\": \"\\\"2021-06-23T07:35:53.216142\\\"\", \"progress_metadata_evaluation_timestamp\": \"\\\"2021-06-23T07:35:53.216142\\\"\", \"_aml_system_progress_metadata_digest\": \"\\\"11a4f9094b7705de6274ad012a3db55536b3496dc3264b4f05cb33e25f8d6ee1\\\"\", \"progress_metadata_digest\": \"\\\"11a4f9094b7705de6274ad012a3db55536b3496dc3264b4f05cb33e25f8d6ee1\\\"\", \"_aml_system_progress_metadata_active_timestamp\": \"\\\"2021-06-23T07:35:53.216142\\\"\", \"progress_metadata_active_timestamp\": \"\\\"2021-06-23T07:35:53.216142\\\"\", \"_aml_system_optimizer_state_artifact\": \"null\", \"_aml_system_outdated_optimizer_state_artifacts\": \"\\\"[]\\\"\", \"_aml_system_HD_e987b7c9-31f1-410a-9d98-028553c0cb34_0\": \"{\\\"C\\\": 10, \\\"max_iter\\\": 100, \\\"solver\\\": \\\"sag\\\"}\", \"HD_e987b7c9-31f1-410a-9d98-028553c0cb34_0\": \"{\\\"C\\\": 10, \\\"max_iter\\\": 100, \\\"solver\\\": \\\"sag\\\"}\", \"_aml_system_HD_e987b7c9-31f1-410a-9d98-028553c0cb34_1\": \"{\\\"C\\\": 10, \\\"max_iter\\\": 75, \\\"solver\\\": \\\"lbfgs\\\"}\", \"HD_e987b7c9-31f1-410a-9d98-028553c0cb34_1\": \"{\\\"C\\\": 10, \\\"max_iter\\\": 75, \\\"solver\\\": \\\"lbfgs\\\"}\", \"_aml_system_HD_e987b7c9-31f1-410a-9d98-028553c0cb34_2\": \"{\\\"C\\\": 100, \\\"max_iter\\\": 50, \\\"solver\\\": \\\"sag\\\"}\", \"HD_e987b7c9-31f1-410a-9d98-028553c0cb34_2\": \"{\\\"C\\\": 100, \\\"max_iter\\\": 50, \\\"solver\\\": \\\"sag\\\"}\", \"_aml_system_HD_e987b7c9-31f1-410a-9d98-028553c0cb34_3\": \"{\\\"C\\\": 0.1, \\\"max_iter\\\": 50, \\\"solver\\\": \\\"lbfgs\\\"}\", \"HD_e987b7c9-31f1-410a-9d98-028553c0cb34_3\": \"{\\\"C\\\": 0.1, \\\"max_iter\\\": 50, \\\"solver\\\": \\\"lbfgs\\\"}\", \"_aml_system_HD_e987b7c9-31f1-410a-9d98-028553c0cb34_4\": \"{\\\"C\\\": 100, \\\"max_iter\\\": 125, \\\"solver\\\": \\\"saga\\\"}\", \"HD_e987b7c9-31f1-410a-9d98-028553c0cb34_4\": \"{\\\"C\\\": 100, \\\"max_iter\\\": 125, \\\"solver\\\": \\\"saga\\\"}\"}, \"end_time_utc\": null, \"status\": \"Running\", \"log_files\": {\"azureml-logs/hyperdrive.txt\": \"https://mlstrg147759.blob.core.windows.net/azureml/ExperimentRun/dcid.HD_e987b7c9-31f1-410a-9d98-028553c0cb34/azureml-logs/hyperdrive.txt?sv=2019-02-02&sr=b&sig=VMX3BjmBeo7hBdgVa8Qnm90mjsLu1AXvJl8ruLi%2B0hY%3D&st=2021-06-23T07%3A29%3A40Z&se=2021-06-23T15%3A39%3A40Z&sp=r\"}, \"log_groups\": [[\"azureml-logs/hyperdrive.txt\"]], \"run_duration\": \"0:03:48\", \"run_number\": \"1\", \"run_queued_details\": {\"status\": \"Running\", \"details\": null}, \"hyper_parameters\": {\"C\": [\"choice\", [[0.01, 0.1, 1, 10, 100]]], \"max_iter\": [\"choice\", [[50, 75, 100, 125, 150, 175, 200]]], \"solver\": [\"choice\", [[\"liblinear\", \"sag\", \"lbfgs\", \"saga\"]]]}}, \"child_runs\": [{\"run_id\": \"HD_e987b7c9-31f1-410a-9d98-028553c0cb34_0\", \"run_number\": 5, \"metric\": null, \"status\": \"Preparing\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"\", \"end_time\": \"\", \"created_time\": \"2021-06-23T07:36:25.785669Z\", \"created_time_dt\": \"2021-06-23T07:36:25.785669Z\", \"duration\": \"0:03:15\", \"hyperdrive_id\": \"e987b7c9-31f1-410a-9d98-028553c0cb34\", \"arguments\": null, \"param_C\": 10, \"param_max_iter\": 100, \"param_solver\": \"sag\"}, {\"run_id\": \"HD_e987b7c9-31f1-410a-9d98-028553c0cb34_2\", \"run_number\": 2, \"metric\": null, \"status\": \"Preparing\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"\", \"end_time\": \"\", \"created_time\": \"2021-06-23T07:36:24.005627Z\", \"created_time_dt\": \"2021-06-23T07:36:24.005627Z\", \"duration\": \"0:03:17\", \"hyperdrive_id\": \"e987b7c9-31f1-410a-9d98-028553c0cb34\", \"arguments\": null, \"param_C\": 100, \"param_max_iter\": 50, \"param_solver\": \"sag\"}, {\"run_id\": \"HD_e987b7c9-31f1-410a-9d98-028553c0cb34_4\", \"run_number\": 4, \"metric\": null, \"status\": \"Preparing\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"\", \"end_time\": \"\", \"created_time\": \"2021-06-23T07:36:24.167338Z\", \"created_time_dt\": \"2021-06-23T07:36:24.167338Z\", \"duration\": \"0:03:17\", \"hyperdrive_id\": \"e987b7c9-31f1-410a-9d98-028553c0cb34\", \"arguments\": null, \"param_C\": 100, \"param_max_iter\": 125, \"param_solver\": \"saga\"}, {\"run_id\": \"HD_e987b7c9-31f1-410a-9d98-028553c0cb34_1\", \"run_number\": 6, \"metric\": null, \"status\": \"Preparing\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"\", \"end_time\": \"\", \"created_time\": \"2021-06-23T07:36:26.020838Z\", \"created_time_dt\": \"2021-06-23T07:36:26.020838Z\", \"duration\": \"0:03:15\", \"hyperdrive_id\": \"e987b7c9-31f1-410a-9d98-028553c0cb34\", \"arguments\": null, \"param_C\": 10, \"param_max_iter\": 75, \"param_solver\": \"lbfgs\"}, {\"run_id\": \"HD_e987b7c9-31f1-410a-9d98-028553c0cb34_3\", \"run_number\": 3, \"metric\": null, \"status\": \"Preparing\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"\", \"end_time\": \"\", \"created_time\": \"2021-06-23T07:36:24.039738Z\", \"created_time_dt\": \"2021-06-23T07:36:24.039738Z\", \"duration\": \"0:03:17\", \"hyperdrive_id\": \"e987b7c9-31f1-410a-9d98-028553c0cb34\", \"arguments\": null, \"param_C\": 0.1, \"param_max_iter\": 50, \"param_solver\": \"lbfgs\"}], \"children_metrics\": {\"categories\": null, \"series\": null, \"metricName\": null}, \"run_metrics\": [], \"run_logs\": \"[2021-06-23T07:35:52.883826][API][INFO]Experiment created\\r\\n[2021-06-23T07:35:53.339323][GENERATOR][INFO]Trying to sample '5' jobs from the hyperparameter space\\r\\n[2021-06-23T07:35:53.536129][GENERATOR][INFO]Successfully sampled '5' jobs, they will soon be submitted to the execution target.\\r\\n[2021-06-23T07:36:23.2675866Z][SCHEDULER][INFO]Scheduling job, id='HD_e987b7c9-31f1-410a-9d98-028553c0cb34_3'\\r\\n[2021-06-23T07:36:23.3000637Z][SCHEDULER][INFO]Scheduling job, id='HD_e987b7c9-31f1-410a-9d98-028553c0cb34_2'\\r\\n[2021-06-23T07:36:23.3188837Z][SCHEDULER][INFO]Scheduling job, id='HD_e987b7c9-31f1-410a-9d98-028553c0cb34_1'\\r\\n[2021-06-23T07:36:23.3555570Z][SCHEDULER][INFO]Scheduling job, id='HD_e987b7c9-31f1-410a-9d98-028553c0cb34_0'\\r\\n[2021-06-23T07:36:23.2367964Z][SCHEDULER][INFO]Scheduling job, id='HD_e987b7c9-31f1-410a-9d98-028553c0cb34_4'\\r\\n[2021-06-23T07:36:24.0984682Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_e987b7c9-31f1-410a-9d98-028553c0cb34_2'\\r\\n[2021-06-23T07:36:24.1274486Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_e987b7c9-31f1-410a-9d98-028553c0cb34_3'\\r\\n[2021-06-23T07:36:24.2620668Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_e987b7c9-31f1-410a-9d98-028553c0cb34_4'\\r\\n[2021-06-23T07:36:25.8865782Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_e987b7c9-31f1-410a-9d98-028553c0cb34_0'\\r\\n[2021-06-23T07:36:26.1168967Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_e987b7c9-31f1-410a-9d98-028553c0cb34_1'\\r\\n[2021-06-23T07:36:52.514133][ENFORCER][INFO]Jobs [https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_0, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_1, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_2, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_3, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_4] do not contain any metrics with the primary metric name at this moment, policy cannot be applied.\\r\\n[2021-06-23T07:37:22.665868][ENFORCER][INFO]Jobs [https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_0, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_1, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_2, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_3, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_4] do not contain any metrics with the primary metric name at this moment, policy cannot be applied.\\r\\n[2021-06-23T07:37:52.707909][ENFORCER][INFO]Jobs [https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_0, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_1, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_2, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_3, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_4] do not contain any metrics with the primary metric name at this moment, policy cannot be applied.\\r\\n[2021-06-23T07:38:22.618145][ENFORCER][INFO]Jobs [https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_0, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_1, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_2, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_3, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_4] do not contain any metrics with the primary metric name at this moment, policy cannot be applied.\\r\\n[2021-06-23T07:38:52.640351][ENFORCER][INFO]Jobs [https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_0, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_1, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_2, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_3, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_4] do not contain any metrics with the primary metric name at this moment, policy cannot be applied.\\r\\n[2021-06-23T07:39:22.556051][ENFORCER][INFO]Jobs [https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_0, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_1, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_2, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_3, https://southcentralus.experiments.azureml.net/subscriptions/f9d5a085-54dc-4215-9ba6-dad5d86e60a0/resourceGroups/aml-quickstarts-147759/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-147759/experiments/**SCRUBBED**/runs/HD_e987b7c9-31f1-410a-9d98-028553c0cb34_4] do not contain any metrics with the primary metric name at this moment, policy cannot be applied.\\n\", \"graph\": {}, \"widget_settings\": {\"childWidgetDisplay\": \"popup\", \"send_telemetry\": false, \"log_level\": \"INFO\", \"sdk_version\": \"1.30.0\"}, \"loading\": false}"
          },
          "metadata": {}
        }
      ],
      "execution_count": 11,
      "metadata": {
        "gather": {
          "logged": 1598546648408
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Best Model\n",
        "\n",
        "TODO: In the cell below, get the best model from the hyperdrive experiments and display all the properties of the model."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "best_run = hyperdriverun.get_best_run_by_primary_metric()\r\n",
        "best_run"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {
        "gather": {
          "logged": 1598546650307
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Best Model Details ---------------\")\r\n",
        "print(\"Arguments \", best_run.get_details()['runDefinition']['arguments'])\r\n",
        "print(\"Accuracy \", best_run.get_metrics(name='Accuracy'))\\"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#TODO: Save the best model\r\n",
        "model = best_run.register_model(model_name='best_hd_run', model_path='outputs/model.joblib')"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {
        "gather": {
          "logged": 1598546657829
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Model Deployment\n",
        "\n",
        "Remember you have to deploy only one of the two models you trained.. Perform the steps in the rest of this notebook only if you wish to deploy this model.\n",
        "\n",
        "TODO: In the cell below, register the model, create an inference config and deploy the model as a web service."
      ],
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "TODO: In the cell below, send a request to the web service you deployed to test it."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "TODO: In the cell below, print the logs of the web service and delete the service"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "Delete the Compute"
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "compute_target.delete()"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    }
  ],
  "metadata": {
    "kernel_info": {
      "name": "python3"
    },
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python",
      "version": "3.6.9",
      "mimetype": "text/x-python",
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "pygments_lexer": "ipython3",
      "nbconvert_exporter": "python",
      "file_extension": ".py"
    },
    "nteract": {
      "version": "nteract-front-end@1.0.0"
    },
    "microsoft": {
      "host": {
        "AzureML": {
          "notebookHasBeenCompleted": true
        }
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 2
}